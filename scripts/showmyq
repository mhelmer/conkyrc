#!/usr/bin/env python2.6
import subprocess
import re
import os

user = os.environ['USER']

output = subprocess.Popen(["showq"], stdout=subprocess.PIPE).communicate()[0]

aj_pat = re.compile("active jobs")
ej_pat = re.compile("eligible jobs")
bj_pat = re.compile("blocked jobs")
usr_pat = re.compile(user)
acc_name_pat = re.compile("\s*?Account_Name = (.*)$")
job_name_pat = re.compile("\s*?Job_Name = (.*)$")

active = []
idle = []
blocked = []
type = 0

for line in output.splitlines():
    if aj_pat.match(line):
        type = 1
    elif ej_pat.match(line):
        queue_pos = -3
        type = 2
    elif bj_pat.match(line):
        type = 3

    if type == 2:
        queue_pos += 1

    if usr_pat.search(line):
        cores = line[39:44].strip()
        time = line[45:57].strip()
        jobid = line[:7].strip()
        qstat_out = subprocess.Popen(["qstat", "-f", jobid],
                                     stdout=subprocess.PIPE).communicate()[0]
        for qs_line in qstat_out.splitlines():
            if acc_name_pat.match(qs_line):
                acc_name = acc_name_pat.match(qs_line).group(1)
            elif job_name_pat.match(qs_line):
                job_name = job_name_pat.match(qs_line).group(1)

        if type == 1:
            active.append([jobid, cores, job_name, acc_name, time])
        elif type == 2:
            idle.append([queue_pos, jobid, cores, job_name, acc_name, time])
        elif type == 3:
            blocked.append([jobid, cores, job_name, acc_name, time])

print('${font arial black:size=7}LINDGREN QUEUE$font')
if active or idle or blocked:
    print('${font arial black:size=7}STATE${goto 45}PROCS'
            '${goto 85}JOB NAME${goto 205}CAC NAME'
            '${alignr}WCLIMIT$font')
else:
    print('%s eligible jobs') % (queue_pos)

if active:
    for job in active:
        print('${font arial black:size=7}A'
              '$font${goto 45}%s${goto 85}%s${goto 205}%s${alignr}%s') % (
            job[1], job[2], job[3], job[4]
        )
if idle:
    for job in idle:
        print('${font arial black:size=7}I$font'
              '(%s)${goto 45}%s${goto 85}%s${goto 205}%s${alignr}%s') % (
            job[0], job[2], job[3], job[4], job[5]
        )
if blocked:
    for job in blocked:
        print('${font arial black:size=7}B$font'
              '${goto 45}%s${goto 85}%s${goto 205}%s${alignr}%s') % (
            job[1], job[2], job[3], job[4]
        )
